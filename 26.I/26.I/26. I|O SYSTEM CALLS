#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <dirent.h>
#include <stdio.h>

int main() {
 int fd;
 struct stat file_stat;
 struct dirent *entry;
 DIR *dir;

 fd = open("example.txt", O_RDONLY);
 if (fd < 0) {
 perror("Error opening file");
 return 1;
 }

 if (fstat(fd, &file_stat) < 0) {
 perror("Error getting file status");
 return 1;
 }

 printf("File size: %ld bytes\n", (long)file_stat.st_size);

 if (lseek(fd, 10, SEEK_SET) < 0) {
 perror("Error changing file offset");
 return 1;
 }

 char buffer[10];
 if (read(fd, buffer, sizeof(buffer)) < 0) {
 perror("Error reading file");
 return 1;
 }

 printf("Buffer: %s\n", buffer);

 if (close(fd) < 0) {
 perror("Error closing file");
 return 1;
 }

 dir = opendir(".");
 if (dir == NULL) {
 perror("Error opening directory");
 return 1;
 }

 while ((entry = readdir(dir)) != NULL) {
 printf("File: %s\n", entry->d_name);
 }

 if (closedir(dir) < 0) {
 perror("Error closing directory");
 return 1;
 }

 return 0;
}
