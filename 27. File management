#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <string.h>

int main() {
 int fd;
 char buffer[100];
 struct stat file_stat;

 // Create a new file
 fd = open("example.txt", O_CREAT | O_EXCL | O_WRONLY, 0644);
 if (fd < 0) {
 perror("Error creating file");
 return 1;
 }

 // Write data to the file
 if (write(fd, "Hello, world!", 13) < 0) {
 perror("Error writing to file");
 return 1;
 }

 // Get file status
 if (fstat(fd, &file_stat) < 0) {
 perror("Error getting file status");
 return 1;
 }

 printf("File size: %ld bytes\n", (long)file_stat.st_size);

 // Change file permissions
 if (chmod("example.txt", 0755) < 0) {
 perror("Error changing file permissions");
 return 1;
 }

 // Read data from the file
 if (lseek(fd, 0, SEEK_SET) < 0) {
 perror("Error changing file offset");
 return 1;
 }

 if (read(fd, buffer, sizeof(buffer)) < 0) {
 perror("Error reading file");
 return 1;
 }

 printf("Buffer: %s\n", buffer);

 // Close the file
 if (close(fd) < 0) {
 perror("Error closing file");
 return 1;
 }

 // Rename the file
 if (rename("example.txt", "new_example.txt") < 0) {
 perror("Error renaming file");
 return 1;
 }

 // Remove the file
 if (unlink("new_example.txt") < 0) {
 perror("Error deleting file");
 return 1;
 }

 return 0;
}
