#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/mman.h>
#include <string.h>
#include <unistd.h>

#define SHM_NAME "/my_shared_memory"
#define SHM_SIZE 1024

int main() {
    int shm_fd;
    void *shm_addr;

    // Create shared memory segment
    shm_fd = shm_open(SHM_NAME, O_CREAT | O_RDWR, 0666);
    if (shm_fd == -1) {
        perror("shm_open");
        exit(1);
    }
    
    // Set the size of the shared memory segment
    if (ftruncate(shm_fd, SHM_SIZE) == -1) {
        perror("ftruncate");
        exit(1);
    }

    // Map the shared memory segment into the address space
    shm_addr = mmap(NULL, SHM_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, shm_fd, 0);
    if (shm_addr == MAP_FAILED) {
        perror("mmap");
        exit(1);
    }

    // Write data to shared memory
    char *data = "Hello, shared memory!";
    memcpy(shm_addr, data, strlen(data) + 1);

    // Unmap the shared memory segment
    if (munmap(shm_addr, SHM_SIZE) == -1) {
        perror("munmap");
        exit(1);
    }

    // Close the shared memory descriptor
    if (close(shm_fd) == -1) {
        perror("close");
        exit(1);
    }

    // Unlink the shared memory segment
    if (shm_unlink(SHM_NAME) == -1) {
        perror("shm_unlink");
        exit(1);
    }

    return 0;
}
