#include<stdio.h>
#define MIN -9999

struct proc {
    int no, at, bt, rt, ct, wt, tat, pri, temp;
};

struct proc read(int i) {
    struct proc p;
    printf("\nProcess No: %d\n", i);
    p.no = i;
    printf("Enter Arrival Time: ");
    scanf("%d", &p.at);
    printf("Enter Burst Time: ");
    scanf("%d", &p.bt);
    p.rt = p.bt;
    printf("Enter Priority: ");
    scanf("%d", &p.pri);
    p.temp = p.pri;
    return p;
}

int main() {
    int i, n, c, remaining, max_val, max_index;
    struct proc p[10], temp;
    float avgtat = 0, avgwt = 0;
    printf("<--Highest Priority First Scheduling Algorithm (Preemptive)-->\n");
    printf("Enter Number of Processes: ");
    scanf("%d", &n);
    for (int i = 0; i < n; i++)
        p[i] = read(i + 1); // corrected line
    remaining = n;
    for (int i = 0; i < n - 1; i++)
        for (int j = 0; j < n - i - 1; j++)
            if (p[j].at > p[j + 1].at) {
                temp = p[j];
                p[j] = p[j + 1];
                p[j + 1] = temp;
            }
    max_val = p[0].temp, max_index = 0;
    for (int j = 0; j < n && p[j].at <= p[0].at; j++)
        if (p[j].temp > max_val) {
            max_val = p[j].temp;
            max_index = j;
        }
    
    // Additional code will go here for implementing the scheduling algorithm

    return 0;
}
